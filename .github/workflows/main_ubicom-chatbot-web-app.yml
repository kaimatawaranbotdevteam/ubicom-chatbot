name: Fullstack Deploy to Azure

on: [push]
env:
  AZURE_WEBAPP_NAME: ubicom-chatbot-web-app
  AZURE_WEBAPP_PACKAGE_PATH: 'client/build'
  NODE_VERSION: '18.x'  # Use a more stable version of Node.js

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:

      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      # Step 3: Install and build React app
      - name: Install and build React app
        run: |
          npm install
          npm run build
        working-directory: ./client

      # Step 4: Install server dependencies
      - name: Install server dependencies
        working-directory: ./server
        run: |
          npm install

      # Step 5: Debug server folder before deployment
      - name: Debug server folder before deployment
        run: ls -alR ./server

      # Step 6: Prepare the deployment folder structure for Azure
      - name: Prepare deployment package
        run: |
          mkdir -p deploy/wwwroot  # Create wwwroot directory for Azure

          # Copy client build (React static files) directly to wwwroot
          cp -r client/build/* deploy/wwwroot/

          # Copy server files (including server.js, package.json, etc.) to the root of wwwroot
          cp -r server/* deploy/wwwroot/

          # Debug contents of wwwroot folder
          ls -alR deploy/wwwroot/

      # Step 7: Zip the deploy folder for Azure
      - name: Zip deploy package for Azure
        run: |
          cd deploy
          zip -r ../deploy.zip ./wwwroot  # Ensure wwwroot is zipped correctly

      # Step 8: Deploy to Azure
      - name: Deploy to Azure
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: deploy.zip
