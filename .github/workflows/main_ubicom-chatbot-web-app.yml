name: Fullstack Deploy to Azure

on: [push]
env:
  AZURE_WEBAPP_NAME: ubicom-chatbot-web-app
  AZURE_WEBAPP_PACKAGE_PATH: 'client/build'
  NODE_VERSION: '20.0'

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:

      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      # Step 3: Install and build React app
      - name: Install and build React app
        run: |
          npm install
          npm run build
        working-directory: ./client

      # Step 4: Copy React build to backend (public folder)
      - name: Copy React build to backend
        run: |
          rm -rf server/public
          mkdir -p server/public
          cp -r client/build/* server/public/

      # Step 5: Install server dependencies
      - name: Install server dependencies
        working-directory: ./server
        run: |
          npm install

      # Step 6: Debug server folder before deployment
      - name: Debug server folder before deployment
        run: ls -alR ./server

      # Step 7: Create a deployment folder structure for Azure
      - name: Prepare deployment package
        run: |
          mkdir -p deploy/wwwroot   # Create the wwwroot directory for Azure
          
          # Copy server folder (including server.js) to wwwroot
          cp -r server/* deploy/wwwroot/

          # Copy client build folder (React static files) to wwwroot
          cp -r client/build/* deploy/wwwroot/

          # Ensure server.js is in the correct location
          ls -alR deploy/wwwroot/  # Debug the contents of wwwroot

      # Step 8: Zip the deploy folder, ensuring correct structure
      - name: Zip deploy package for Azure
        run: |
          cd deploy
          zip -r ../deploy.zip ./wwwroot  # Zip only the contents of wwwroot

      # Step 9: Deploy to Azure - Attempt 1
      - name: Deploy to Azure - Attempt 1
        uses: azure/webapps-deploy@v2
        continue-on-error: true
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: deploy.zip

      # Step 10: Retry deployment if the first attempt fails (Attempt 2)
      - name: Deploy to Azure - Attempt 2
        if: failure()
        uses: azure/webapps-deploy@v2
        continue-on-error: true
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: deploy.zip

      # Step 11: Retry deployment if the second attempt fails (Attempt 3)
      - name: Deploy to Azure - Attempt 3
        if: failure()
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: deploy.zip
