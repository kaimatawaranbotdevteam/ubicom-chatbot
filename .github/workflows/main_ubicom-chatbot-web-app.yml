name: Fullstack Deploy to Azure

on:
  push:
    branches:
      - main  # Deploy when changes are pushed to the `main` branch

env:
  AZURE_WEBAPP_NAME: your-app-name-here         # Replace with your Azure Web App name
  AZURE_WEBAPP_PACKAGE_PATH: 'client/build'     # Path to the build output for React (frontend)
  NODE_VERSION: '18.x'                          # Specify the Node.js version

jobs:
  build-and-deploy:
    name: Build and Deploy to Azure
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      # Step 3: Install and build the React frontend
      - name: Install dependencies and build React app
        run: |
          cd client
          npm install
          npm run build

      # Step 4: Copy the React build to the backend's public folder
      - name: Copy React build to the backend
        run: |
          rm -rf server/public
          mkdir -p server/public
          cp -r client/build/* server/public/

      # Step 5: Install Node.js server dependencies
      - name: Install server dependencies
        run: |
          cd server
          npm install

      # Step 6: Prepare the deployment package (zip the server and client/build)
      - name: Prepare deployment package
        run: |
          mkdir -p deploy/wwwroot
          cp -r server/* deploy/wwwroot/
          cp -r client/build/* deploy/wwwroot/client/  # Copy frontend build into a client directory
          ls -alR deploy/wwwroot/

      # Step 7: Zip the deployment package
      - name: Zip deployment package
        run: |
          cd deploy
          zip -r ../deploy.zip ./wwwroot

      # Step 8: Deploy to Azure App Service using publish profile for basic authentication
      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}  # Reference the publish profile secret
          package: deploy.zip
          clearExisting: true  # This will ensure the existing files are deleted before the new ones are deployed

      # Step 9: Restart Azure App Service (optional)
      - name: Restart Azure App Service
        run: |
          az webapp restart --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group your-resource-group-name
